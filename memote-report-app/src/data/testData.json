{
    "cards": {
        "misc": {
            "cases": [
                "test_find_reactions_unbounded_flux_default_condition",
                "test_find_metabolites_consumed_with_closed_bounds",
                "test_transport_reaction_gpr_presence",
                "test_find_metabolites_produced_with_closed_bounds",
                "test_direct_metabolites_in_biomass",
                "test_find_stoichiometrically_balanced_cycles"
            ],
            "title": "Misc. Tests"
        },
        "scored": {
            "cases": [],
            "sections": {
                "annotation": {
                    "cases": [
                        "test_metabolite_annotation_presence",
                        "test_reaction_annotation_presence",
                        "test_metabolite_annotation_overview",
                        "test_reaction_annotation_overview",
                        "test_metabolite_annotation_wrong_ids",
                        "test_reaction_annotation_wrong_ids",
                        "test_metabolite_id_namespace_consistency",
                        "test_reaction_id_namespace_consistency"
                    ],
                    "title": "Annotation",
                    "weight": 1.0
                },
                "consistency": {
                    "cases": [
                        "test_reaction_mass_balance",
                        "test_find_disconnected",
                        "test_stoichiometric_consistency",
                        "test_reaction_charge_balance"
                    ],
                    "title": "Consistency",
                    "weight": 3.0
                },
                "matrix": {
                    "cases": null,
                    "title": "Matrix Conditioning",
                    "weight": 1.0
                },
                "sbo": {
                    "cases": null,
                    "title": "SBO Terms",
                    "weight": 2.0
                },
                "sequence": {
                    "cases": null,
                    "title": "Sequence Cross References",
                    "weight": 2.0
                }
            },
            "title": "Core Tests"
        },
        "test_basic": {
            "cases": [
                "test_find_unique_metabolites",
                "test_find_transport_reactions",
                "test_find_pure_metabolic_reactions",
                "test_protein_complex_presence",
                "test_compartments_presence",
                "test_metabolic_coverage",
                "test_ngam_presence",
                "test_gene_protein_reaction_rule_presence",
                "test_metabolites_charge_presence",
                "test_metabolites_formula_presence",
                "test_transport_reaction_presence",
                "test_metabolites_presence",
                "test_reactions_presence",
                "test_genes_presence",
                "test_model_id_presence"
            ],
            "title": "Basic Information"
        },
        "test_biomass": {
            "cases": [
                "test_biomass_presence",
                "test_biomass_consistency",
                "test_biomass_default_production",
                "test_biomass_precursors_default_production",
                "test_biomass_precursors_open_production",
                "test_gam_in_biomass",
                "test_fast_growth_default"
            ],
            "title": "Biomass"
        },
        "test_consistency": {
            "cases": [
                "test_detect_energy_generating_cycles",
                "test_blocked_reactions",
                "test_find_orphans",
                "test_find_deadends"
            ],
            "title": "Stoichiometry Matrix"
        }
    },
    "meta": {
        "packages": {
            "Babel": "2.3.4",
            "Escher": "1.6.0",
            "GitPython": "2.1.3",
            "IProgress": "0.4",
            "Jinja2": "2.9.6",
            "MarkupSafe": "1.0",
            "Owlready2": "0.5",
            "PyGithub": "1.35",
            "PyJWT": "1.5.2",
            "PyYAML": "3.12",
            "Pygments": "2.2.0",
            "Sphinx": "1.5.2",
            "TravisPy": "0.3.5",
            "alabaster": "0.7.9",
            "altair": "1.2.0",
            "appdirs": "1.4.3",
            "appnope": "0.1.0",
            "argh": "0.26.2",
            "arrow": "0.10.0",
            "backports-abc": "0.5",
            "backports.shutil-get-terminal-size": "1.0.0",
            "backports.ssl-match-hostname": "3.5.0.1",
            "binaryornot": "0.4.3",
            "bleach": "2.0.0",
            "blessings": "1.6",
            "bumpversion": "0.5.3",
            "cameo": "0.11.2",
            "carveme": "0.1.4",
            "certifi": "2017.7.27.1",
            "cffi": "1.9.1",
            "chardet": "3.0.4",
            "click": "6.6",
            "click-configfile": "0.2.2",
            "click-log": "0.2.1",
            "cloudpickle": "0.2.2",
            "cobra": "0.10.1",
            "codecov": "2.0.5",
            "colorama": "0.3.7",
            "configparser": "3.5.0",
            "cookiecutter": "1.5.1",
            "coverage": "4.3.4",
            "cryptography": "1.7.1",
            "cycler": "0.10.0",
            "dask": "0.14.3",
            "decorator": "4.1.2",
            "docker": "2.4.2",
            "docker-pycreds": "0.2.1",
            "docutils": "0.13.1",
            "entrypoints": "0.2.3",
            "enum34": "1.1.6",
            "et-xmlfile": "1.0.1",
            "flake8": "3.2.1",
            "framed": "0.3.5",
            "functools32": "3.2.3.post2",
            "future": "0.16.0",
            "gitdb2": "2.0.0",
            "gnomic": "0.6.0",
            "grako": "3.99.9",
            "html5lib": "0.999999999",
            "idna": "2.6",
            "imagesize": "0.7.1",
            "inspyred": "1.0.1",
            "ipaddress": "1.0.18",
            "ipykernel": "4.6.1",
            "ipython": "5.4.1",
            "ipython-genutils": "0.2.0",
            "ipywidgets": "6.0.0",
            "jdcal": "1.3",
            "jinja2-ospath": "0.2.1",
            "jinja2-time": "0.2.0",
            "jsonschema": "2.6.0",
            "jupyter": "1.0.0",
            "jupyter-client": "5.1.0",
            "jupyter-console": "5.1.0",
            "jupyter-core": "4.3.0",
            "lazy-object-proxy": "1.3.1",
            "lxml": "3.8.0",
            "matplotlib": "2.0.2",
            "mccabe": "0.5.3",
            "memote": "0.4.5",
            "mistune": "0.7.4",
            "mpmath": "1.0.0",
            "nbconvert": "5.2.1",
            "nbformat": "4.3.0",
            "networkx": "2.0",
            "notebook": "5.0.0",
            "numexpr": "2.6.4",
            "numpy": "1.13.3",
            "numpydoc": "0.7.0",
            "openpyxl": "2.4.8",
            "optlang": "1.3.0",
            "ordered-set": "2.0.2",
            "packaging": "16.8",
            "palettable": "3.1.0",
            "pandas": "0.21.1",
            "pandocfilters": "1.4.2",
            "pathlib2": "2.3.0",
            "pathtools": "0.1.2",
            "pexpect": "4.2.1",
            "pickleshare": "0.7.4",
            "pip": "9.0.1",
            "plotly": "2.0.8",
            "pluggy": "0.4.0",
            "poyo": "0.4.1",
            "prompt-toolkit": "1.0.15",
            "ptyprocess": "0.5.2",
            "py": "1.4.34",
            "pyasn1": "0.2.2",
            "pycodestyle": "2.2.0",
            "pycparser": "2.17",
            "pydocstyle": "1.1.1",
            "pyflakes": "1.3.0",
            "pyparsing": "2.2.0",
            "pytest": "3.2.2",
            "pytest-cov": "2.4.0",
            "pytest-raises": "0.6",
            "pytest-rerunfailures": "2.2",
            "python-dateutil": "2.6.1",
            "python-libsbml": "5.15.0",
            "pytz": "2017.3",
            "pyzmq": "16.0.2",
            "qtconsole": "4.3.1",
            "requests": "2.12.5",
            "ruamel.ordereddict": "0.4.13",
            "ruamel.yaml": "0.14.12",
            "scandir": "1.5",
            "scikit-learn": "0.19.0",
            "scipy": "0.19.1",
            "selenium": "3.5.0",
            "setuptools": "36.5.0",
            "simplegeneric": "0.8.1",
            "singledispatch": "3.4.0.3",
            "six": "1.11.0",
            "smmap2": "2.0.1",
            "snowballstemmer": "1.2.1",
            "sphinx-bootstrap-theme": "0.5.3",
            "subprocess32": "3.2.7",
            "swiglpk": "1.4.4",
            "sympy": "1.1.1",
            "tabulate": "0.8.2",
            "terminado": "0.6",
            "testpath": "0.3.1",
            "toolz": "0.8.2",
            "tornado": "4.5.2",
            "tox": "2.5.0",
            "traitlets": "4.3.2",
            "travis-encrypt": "0.4.6",
            "urllib3": "1.22",
            "vega": "0.4.4",
            "virtualenv": "15.1.0",
            "watchdog": "0.8.3",
            "wcwidth": "0.1.7",
            "webencodings": "0.5.1",
            "websocket-client": "0.44.0",
            "wheel": "0.29.0",
            "whichcraft": "0.4.1",
            "widgetsnbextension": "2.0.0"
        },
        "platform": "Darwin",
        "python": "2.7.10",
        "release": "16.7.0",
        "timestamp": "2018-01-17 14:09:52.538111"
    },
    "tests": {
        "test_biomass_consistency": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": 1.5407661664547
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.0010471343994140625
            },
            "message": {
                "BIOMASS_Ecoli_core_w_GAM": "The component molar mass of the biomass reaction\nBIOMASS_Ecoli_core_w_GAM sums up to 1.54076616645         which is\noutside of the 1e-03 margin from 1 mmol / g[CDW] / h."
            },
            "metric": 1.0,
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "failed"
            },
            "summary": "\n    Expect biomass components to sum up to 1 g[CDW].\n\n    The molecular weight of the biomass reaction in metabolic models is\n    defined to be equal to 1 g/mmol. Conforming to this is essential in order\n    to be able to reliably calculate growth yields, to cross-compare models,\n    and to obtain valid predictions when simulating microbial consortia. A\n    deviation by 1e-03 is accepted.\n    ",
            "title": "Biomass Consistency",
            "format_type": "number"
        },
        "test_biomass_default_production": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": 0.8739215069684279
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.001722097396850586
            },
            "message": {
                "BIOMASS_Ecoli_core_w_GAM": "Using the biomass reaction BIOMASS_Ecoli_core_w_GAM this is the growth\nrate (1/h) that         can be achieved when the model is simulated on\nthe provided         default medium: 0.873921506968"
            },
            "metric": 1.0,
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "passed"
            },
            "summary": "\n    Expect biomass production in default medium.\n\n    Using flux balance analysis this test optimizes the model for growth in\n    the medium that is set by default. Any non-zero growth rate is accepted to\n    pass this test.\n    ",
            "title": "Biomass Production At Default State",
            "format_type": "number"
        },
        "test_biomass_precursors_default_production": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": [
                    "nad_c",
                    "accoa_c",
                    "nadph_c"
                ]
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.11801910400390625
            },
            "message": {
                "BIOMASS_Ecoli_core_w_GAM": "Using the biomass reaction BIOMASS_Ecoli_core_w_GAM and when the model\nis simulated on the         provided default medium a total of 3\nprecursors         (500.00% of all precursors except h2o and atp)\ncannot be produced: ['nad_c', 'accoa_c', 'nadph_c']"
            },
            "metric": {
                "BIOMASS_Ecoli_core_w_GAM": 5
            },
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "failed"
            },
            "summary": "\n    Expect production of all biomass precursors in default medium.\n\n    Using flux balance analysis this test optimizes for the production of each\n    metabolite that is a substrate of the biomass reaction with the exception\n    of atp and h2o. Optimizations are carried out using the default\n    conditions. This is useful when reconstructing the precursor biosynthesis\n    pathways of a metabolic model. To pass this test, the model should be able\n    to synthesis all the precursors.\n    ",
            "title": "Blocked Biomass Precursors At Default State",
            "format_type": "count"
        },
        "test_biomass_precursors_open_production": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": [
                    "accoa_c",
                    "nadph_c",
                    "nad_c",
                    "atp_c"
                ]
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.16240978240966797
            },
            "message": {},
            "metric": 1.0,
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "failed"
            },
            "summary": "\n    Expect precursor production in complete medium.\n\n    Using flux balance analysis this test optimizes for the production of each\n    metabolite that is a substrate of the biomass reaction with the exception\n    of atp and h2o. Optimizations are carried out using a complete\n    medium i.e. unconstrained boundary reactions. This is useful when\n    reconstructing the precursor biosynthesis pathways of a metabolic model.\n    To pass this test, the model should be able to synthesis all the\n    precursors.\n    ",
            "title": "Blocked Biomass Precursors In Complete Medium",
            "format_type": "count"
        },
        "test_biomass_presence": {
            "data": [
                "BIOMASS_Ecoli_core_w_GAM"
            ],
            "duration": 0.00039505958557128906,
            "message": "In this model 1 the following biomass reactions were\nidentified: BIOMASS_Ecoli_core_w_GAM",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect the model to contain at least one biomass reaction.\n\n    The biomass composition aka biomass formulation aka biomass reaction\n    is a common pseudo-reaction accounting for biomass synthesis in\n    constraints-based modelling. It describes the stoichiometry of\n    intracellular compounds that are required for cell growth. While this\n    reaction may not be relevant to modeling the metabolism of higher\n    organisms, it is essential for single-cell modeling.\n\n    This test checks if at least one biomass reaction is present. Currently,\n    the biomass reaction is identified by looking for the word 'biomass' in\n    the reaction ID. The heuristics of identification will be improved in the\n    future.\n    ",
            "title": "Amount of Biomass Reactions",
            "format_type": "count"
        },
        "test_blocked_reactions": {
             "data": [],
             "duration": 0.062155961990356445,
             "message": "There are 0 (0.00%) blocked reactions in         the model:",
             "metric": 0,
             "result": "passed",
             "summary": "\n    Expect all reactions to be able to carry flux in complete medium.\n\n    Universally blocked reactions are reactions that during Flux Variability\n    Analysis cannot carry any flux while all model boundaries are open.\n    Generally blocked reactions are caused by network gaps, which can be\n    attributed to scope or knowledge gaps.\n    ",
             "title": "Number of Universally Blocked Reactions",
             "format_type": "count"
        },
        "test_compartments_presence": {
            "data": [
                "c",
                "e"
            ],
            "duration": 0.0004489421844482422,
            "message": "A total of 2 compartments are defined in the model: c, e",
            "metric": 1.0,
            "result": "failed",
            "summary": "\n    Expect that more than two compartments are defined in the model.\n\n    While simplified metabolic models may be perfectly viable, generally\n    across the tree of life organisms contain at least one distinct\n    compartment: the cytosol or cytoplasm. In the case of prokaryotes there is\n    usually a periplasm, and eurkaryotes are more complex. In addition to the\n    internal compartment, a metabolic model also reflects the extracellular\n    environment i.e. the medium/ metabolic context in which the modelled cells\n    grow. Hence, in total, at least two compartments can be expected from a\n    metabolic model.\n    ",
            "title": "Total Number of Compartments",
            "format_type": "count"
        },
        "test_detect_energy_generating_cycles": {
            "data": {
                "accoa_c": [],
                "atp_c": [],
                "glu__L_c": [],
                "nadh_c": [],
                "nadph_c": [],
                "q8h2_c": []
            },
            "duration": {
                "2dmmql8_c": 0.00018596649169921875,
                "accoa_c": 0.06302690505981445,
                "atp_c": 0.056301116943359375,
                "ctp_c": 0.00021505355834960938,
                "fadh2_c": 0.00017309188842773438,
                "fmnh2_c": 0.0005719661712646484,
                "glu__L_c": 0.0614628791809082,
                "gtp_c": 0.0005939006805419922,
                "h_p": 0.0002090930938720703,
                "itp_c": 0.0007379055023193359,
                "mql6_c": 0.00017595291137695312,
                "mql7_c": 0.00019979476928710938,
                "mql8_c": 0.000202178955078125,
                "nadh_c": 0.06001400947570801,
                "nadph_c": 0.06363797187805176,
                "q8h2_c": 0.06588912010192871,
                "utp_c": 0.0001800060272216797
            },
            "message": {
                "accoa_c": "The model can produce 'accoa_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:",
                "atp_c": "The model can produce 'atp_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:",
                "glu__L_c": "The model can produce 'glu__L_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:",
                "nadh_c": "The model can produce 'nadh_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:",
                "nadph_c": "The model can produce 'nadph_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:",
                "q8h2_c": "The model can produce 'q8h2_c' without requiring resources. This is\ncaused by improperly constrained reactions leading to erroneous\nenergy-generating cycles. The following 0 reactions are involved in\nthose cycles:"
            },
            "metric": 1.0,
            "result": {
                "2dmmql8_c": "skipped",
                "accoa_c": "passed",
                "atp_c": "passed",
                "ctp_c": "skipped",
                "fadh2_c": "skipped",
                "fmnh2_c": "skipped",
                "glu__L_c": "passed",
                "gtp_c": "skipped",
                "h_p": "skipped",
                "itp_c": "skipped",
                "mql6_c": "skipped",
                "mql7_c": "skipped",
                "mql8_c": "skipped",
                "nadh_c": "passed",
                "nadph_c": "passed",
                "q8h2_c": "passed",
                "utp_c": "skipped"
            },
            "summary": "\n    Expect that no energy metabolite can be produced out of nothing.\n\n    When a model is not sufficiently constrained to account for the\n    thermodynamics of reactions, flux cycles may form which provide reduced\n    metabolites to the model without requiring nutrient uptake. These cycles\n    are referred to as erroneous energy-generating cycles. Their effect on the\n    predicted growth rate in FBA may account for an increase of up to 25%,\n    which makes studies involving the growth rates predicted from such models\n    unreliable.\n\n    This test uses an implementation of the algorithm presented by:\n    Fritzemeier, C. J., Hartleb, D., Szappanos, B., Papp, B., & Lercher,\n    M. J. (2017). Erroneous energy-generating cycles in published genome scale\n    metabolic networks: Identification and removal. PLoS Computational\n    Biology, 13(4), 1\u201314. http://doi.org/10.1371/journal.pcbi.1005494\n    ",
            "title": "Erroneous Energy-generating Cycles",
            "format_type": "count"
        },
        "test_direct_metabolites_in_biomass": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": []
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.011848926544189453
            },
            "message": {},
            "metric": {
                "BIOMASS_Ecoli_core_w_GAM": 0
            },
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "failed"
            },
            "summary": "\n    Expect the biomass reactions to contain atp and adp.\n\n    Some biomass precursors are taken from the media and directly consumed by\n    the biomass reaction. It might not be a problem for ions or\n    metabolites for which the organism in question is auxotrophic. However,\n    too many of these metabolites may be artifacts of automated gap-filling\n    procedures. Many gap-filling algorithms attempt to minimise the number of\n    added reactions. This can lead to many biomass precursors being\n    \"direct metabolites\".\n\n    This test reports the ratio of direct metabolites to the total amount of\n    precursors to a given biomass reaction. It specifically looks for\n    metabolites that are only in either exchange, transport or biomass\n    reactions. Bear in mind that this may lead to false positives in heavily\n    compartimentalized models.\n\n    To pass this test, the ratio of direct metabolites should be less than 50%\n    of all biomass precursors. This is an arbitrary threshold but it takes\n    into account that while certain ions do not serve a relevant metabolic\n    function, it may still be important to include them in the biomass\n    reaction to account for the impact of their uptake energy costs.\n\n    This threshold is subject to change in the future.\n    ",
            "title": "Ratio of Direct Metabolites in Biomass Reaction",
            "format_type": "percent"
        },
        "test_fast_growth_default": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": true
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.0007300376892089844
            },
            "message": {
                "BIOMASS_Ecoli_core_w_GAM": "Using the biomass reaction BIOMASS_Ecoli_core_w_GAM and when the model\nis simulated on         the provided default medium the growth rate\namounts to True"
            },
            "metric": 1.0,
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "passed"
            },
            "summary": "\n    Expect the predicted growth rate for each BOF to be below 10.3972.\n\n    The growth rate of a metabolic model should not be faster than that of the\n    fastest growing organism. This is based on lowest doubling time reported\n    here:\n    http://www.pnnl.gov/science/highlights/highlight.asp?id=879\n    ",
            "title": "Unrealistic Growth Rate In Default Condition",
            "format_type": "raw"
        },
        "test_find_deadends": {
            "data": [],
            "duration": 0.0011508464813232422,
            "message": "A total of 0 (0.00%) metabolites are not consumed by any reaction\nof the model:",
            "metric": 0,
            "result": "failed",
            "summary": "\n    Expect no dead-ends to be present.\n\n    Dead-ends are metabolites that can only be produced but not consumed by\n    reactions in the model. They may indicate the presence of network gaps.\n    ",
            "title": "Number of Dead-end Metabolites",
            "format_type": "count"
        },
        "test_find_disconnected": {
            "data": [],
            "duration": 0.00030112266540527344,
            "message": "A total of 0 (0.00%) metabolites are not associated with any\nreaction of the model:",
            "metric": 0,
            "result": "passed",
            "summary": "\n    Expect no disconnected metabolites to be present.\n\n    Disconnected metabolites are not part of any reaction in the model. They\n    are most likely left-over from the reconstruction process, but may also\n    point to network gaps.\n    ",
            "title": "Number of Disconnected Metabolites",
            "format_type": "count"
        },
        "test_find_metabolites_consumed_with_closed_bounds": {
            "data": [],
            "duration": 0.17067694664001465,
            "message": "A total of 0 (0.00%) metabolites can be consumed without         using\nthe system's boundary reactions:",
            "metric": 0,
            "result": "passed",
            "summary": "\n    Expect no metabolites to be consumed without product removal.\n\n    Just like metabolites should not be produced from nothing, mass should\n    not simply be removed from the model. This test disables all the\n    boundary reactions and checks if each metabolite can be consumed\n    individually using flux balance analysis. To pass this test no\n    metabolite outside of specific boundary reactions should be consumed\n    without product leaving the system.\n    ",
            "title": "Number of Metabolites Consumed Without Product Removal ",
            "format_type": "count"
        },
        "test_find_metabolites_produced_with_closed_bounds": {
            "data": [],
            "duration": 0.1732320785522461,
            "message": "A total of 0 (0.00%) metabolites can be produced without the model\nneeding to consume any substrate:",
            "metric": 0,
            "result": "passed",
            "summary": "\n    Expect no metabolites to be produced without substrate consumption.\n\n    It should not be possible for the model to produce metabolites without\n    consuming substrate from the medium. This test disables all the boundary\n    reactions and checks if each metabolite can be produced individually\n    using flux balance analysis. To pass this test no metabolite outside of\n    specific boundary reactions should be produced without the consumption of\n    substrate.\n    ",
            "title": "Number of Metabolites Produced Without Substrate Consumption",
            "format_type": "count"
        },
        "test_find_orphans": {
            "data": [
                "fru_e",
                "fum_e",
                "gln__L_e",
                "mal__L_e"
            ],
            "duration": 0.000698089599609375,
            "message": "A total of 4 (0.00%) metabolites are not produced by any reaction\nof the model: fru_e, fum_e, gln__L_e, mal__L_e",
            "metric": 0,
            "result": "failed",
            "summary": "\n    Expect no orphans to be present.\n\n    Orphans are metabolites that are only consumed but not produced by\n    reactions in the model. They may indicate the presence of network gaps.\n    ",
            "title": "Number of Orphan Metabolites",
            "format_type": "count"
        },
        "test_find_pure_metabolic_reactions": {
            "data": [
                "GLNS",
                "FRD7",
                "AKGDH",
                "PGL",
                "GLUSy",
                "ICDHyr",
                "GLUDy",
                "LDH_D",
                "GLUN",
                "FBA",
                "PGM",
                "ACKr",
                "RPI",
                "ACONTb",
                "PPC",
                "PFK",
                "PPCK",
                "CS",
                "PDH",
                "ACONTa",
                "PPS",
                "MDH",
                "ADK1",
                "GAPD",
                "GND",
                "TPI",
                "FUM",
                "TKT1",
                "MALS",
                "RPE",
                "ME1",
                "PYK",
                "ME2",
                "PFL",
                "NADTRHD",
                "SUCOAS",
                "PGI",
                "TKT2",
                "ENO",
                "ACALD",
                "PGK",
                "ALCD2x",
                "TALA",
                "FBP",
                "SUCDi",
                "G6PDH2r",
                "PTAr",
                "ATPM",
                "ICL"
            ],
            "duration": 0.025393009185791016,
            "message": "A total of 49 (51.58%) purely metabolic reactions are defined in\nthe model, this excludes transporters, exchanges, or pseudo-reactions:\nGLNS, FRD7, AKGDH, PGL, GLUSy, ...",
            "metric": 0.5157894736842106,
            "result": "passed",
            "summary": "\n    Expect at least one pure metabolic reaction to be defined in the model.\n\n    If a reaction is neither a transport reaction, a biomass reaction nor a\n    boundary reaction, it is counted as a purely metabolic reaction. This test\n    requires the presence of metabolite formula to be able to identify\n    transport reactions. This test is passed when the model contains at least\n    one purely metabolic reaction i.e. a conversion of one metabolite into\n    another.\n    ",
            "title": "Number of Purely Metabolic Reactions",
            "format_type": "count"
        },
        "test_find_reactions_unbounded_flux_default_condition": {
            "data": [
                "SUCDi"
            ],
            "duration": 0.038101911544799805,
            "message": " A fraction of 100.00% of the non-blocked reactions (in total\n0.0108695652174         reactions) can carry unbounded flux in the\ndefault model         condition. Unbounded reactions may be involved\nin         thermodynamically infeasible cycles: SUCDi",
            "metric": 0.010869565217391304,
            "result": "passed",
            "summary": "\n    Expect the fraction of unbounded reactions to be low.\n\n    A large fraction of model reactions able to carry unlimited flux under\n    default conditions indicates problems with reaction directionality,\n    missing cofactors, incorrectly defined transport reactions and more.\n    ",
            "title": "Fraction of Unbounded Reactions in the Default Condition",
            "format_type": "percent"
        },
        "test_find_stoichiometrically_balanced_cycles": {
            "data": null,
            "duration": 0.0001709461212158203,
            "message": null,
            "metric": 1.0,
            "result": "skipped",
            "summary": "\n    Expect no stoichiometrically balanced loops to be present.\n\n    Stoichiometrically Balanced Cycles are artifacts of insufficiently\n    constrained networks resulting in reactions that can carry flux when\n    all the boundaries have been closed.\n    ",
            "title": "Stoichiometrically Balanced Cycles",
            "format_type": "count"
        },
        "test_find_transport_reactions": {
            "data": [
                "ACALDt",
                "ACt2r",
                "AKGt2r",
                "ATPS4r",
                "CO2t",
                "CYTBD",
                "D_LACt2",
                "ETOHt2r",
                "FORt2",
                "FORti",
                "FRUpts2",
                "FUMt2_2",
                "GLCpts",
                "GLNabc",
                "GLUt2r",
                "H2Ot",
                "MALt2_2",
                "NADH16",
                "NH4t",
                "O2t",
                "PIt2r",
                "PYRt2",
                "SUCCt2_2",
                "SUCCt3",
                "THD2"
            ],
            "duration": 0.03350400924682617,
            "message": "A total of 25 (26.32%) transport reactions are defined in the\nmodel, this excludes purely metabolic reactions, exchanges, or\npseudo-reactions: ACALDt, ACt2r, AKGt2r, ATPS4r, CO2t, ...",
            "metric": 0.2631578947368421,
            "result": "passed",
            "summary": "Expect >= 1 transport reactions are present in the read_only_model.",
            "title": "Number of Transport Reactions",
            "format_type": "count"
        },
        "test_find_unique_metabolites": {
            "data": [
                "ac",
                "2pg",
                "acald",
                "q8h2",
                "xu5p",
                "6pgc",
                "etoh",
                "r5p",
                "6pgl",
                "ru5p",
                "g3p",
                "e4p",
                "co2",
                "adp",
                "actp",
                "q8",
                "oaa",
                "pep",
                "glx",
                "nadph",
                "dhap",
                "fru",
                "nad",
                "pi",
                "o2",
                "nadh",
                "accoa",
                "pyr",
                "lac",
                "nh4",
                "succ",
                "icit",
                "13dpg",
                "amp",
                "nadp",
                "mal",
                "3pg",
                "succoa",
                "for",
                "gln",
                "acon",
                "h",
                "glc",
                "coa",
                "fdp",
                "h2o",
                "atp",
                "cit",
                "s7p",
                "g6p",
                "fum",
                "akg",
                "glu",
                "f6p"
            ],
            "duration": 0.0003581047058105469,
            "message": "Not counting the same entities in other compartments, there is a\ntotal of 54 (75.00%) unique metabolites in the model: ac, 2pg, acald,\nq8h2, xu5p, ...",
            "metric": 0.75,
            "result": "passed",
            "summary": "\n    Expect there to be less metabolites when removing compartment tag.\n\n    Metabolites may be transported into different compartments, which means\n    that in a compartimentalized model the number of metabolites may be\n    much higher than in a model with no compartments. This test counts only\n    one occurrence of each metabolite and returns this as the number of unique\n    metabolites. The test expects that the model is compartimentalized, and\n    thus, that the number of unique metabolites is generally lower than the\n    total number of metabolites.\n    ",
            "title": "Number of Unique Metabolites",
            "format_type": "count"
        },
        "test_gam_in_biomass": {
            "data": {
                "BIOMASS_Ecoli_core_w_GAM": true
            },
            "duration": {
                "BIOMASS_Ecoli_core_w_GAM": 0.00033092498779296875
            },
            "message": {
                "BIOMASS_Ecoli_core_w_GAM": "BIOMASS_Ecoli_core_w_GAM does not contain a term for growth-associated\nmaintenance."
            },
            "metric": 1.0,
            "result": {
                "BIOMASS_Ecoli_core_w_GAM": "passed"
            },
            "summary": "\n    Expect the biomass reactions to contain atp and adp.\n\n    The growth-associated maintenance (GAM) term accounts for the energy in\n    the form of ATP that is required to synthesize macromolecules such as\n    Proteins, DNA and RNA, and other processes during growth. This test checks\n    if a biomass reaction contains this term.\n    ",
            "title": "Growth-associated Maintenance in Biomass Reaction",
            "format_type": "raw"
        },
        "test_gene_protein_reaction_rule_presence": {
            "data": [
                "ETOHt2r",
                "BIOMASS_Ecoli_core_w_GAM",
                "SUCCt3",
                "ATPM",
                "ACt2r",
                "PYRt2"
            ],
            "duration": 0.0018110275268554688,
            "message": "There are a total of 6 reactions (6.32%) without GPR:         ETOHt2r,\nBIOMASS_Ecoli_core_w_GAM, SUCCt3, ATPM, ACt2r, ...",
            "metric": 0.06315789473684211,
            "result": "failed",
            "summary": "\n    Expect all non-exchange reactions to have a GPR rule.\n\n    Gene-Protein-Reaction rules express which gene has what function.\n    The presence of this annotation is important to justify the existence\n    of reactions in the model, and is required to conduct in silico gene\n    deletion studies. However, reactions without GPR may also be valid:\n    Spontaneous reactions, or known reactions with yet undiscovered genes\n    likely lack GPR.\n    ",
            "title": "Reactions without GPR",
            "format_type": "count"
        },
        "test_genes_presence": {
            "data": [
                "b0351",
                "b1241",
                "s0001",
                "b3115",
                "b1849",
                "b2296",
                "b0118",
                "b1276",
                "b0474",
                "b0116",
                "b0727",
                "b0726",
                "b2587",
                "b0356",
                "b1478",
                "b3733",
                "b3739",
                "b3735",
                "b3734",
                "b3738",
                "b3736",
                "b3732",
                "b3737",
                "b3731",
                "b0720",
                "b0734",
                "b0978",
                "b0733",
                "b0979",
                "b2975",
                "b3603",
                "b2779",
                "b2097",
                "b2925",
                "b1773",
                "b3925",
                "b4232",
                "b2492",
                "b0904",
                "b4151",
                "b4152",
                "b4154",
                "b4153",
                "b2416",
                "b1818",
                "b1817",
                "b1819",
                "b2415",
                "b1611",
                "b4122",
                "b1612",
                "b3528",
                "b1852",
                "b1779",
                "b1621",
                "b2417",
                "b1101",
                "b1297",
                "b3870",
                "b0810",
                "b0811",
                "b0809",
                "b1761",
                "b0485",
                "b1812",
                "b1524",
                "b3213",
                "b3212",
                "b4077",
                "b2029",
                "b0875",
                "b1136",
                "b4015",
                "b2133",
                "b1380",
                "b4014",
                "b2976",
                "b3236",
                "b1479",
                "b2463",
                "b2280",
                "b2278",
                "b2281",
                "b2288",
                "b2282",
                "b2286",
                "b2283",
                "b2277",
                "b2287",
                "b2284",
                "b2279",
                "b2276",
                "b2285",
                "b3962",
                "b1602",
                "b1603",
                "b0451",
                "b0115",
                "b0114",
                "b3916",
                "b1723",
                "b0903",
                "b3952",
                "b3114",
                "b0902",
                "b2579",
                "b3951",
                "b4025",
                "b2926",
                "b0767",
                "b0755",
                "b3612",
                "b4395",
                "b2987",
                "b3493",
                "b3956",
                "b3403",
                "b1702",
                "b2297",
                "b2458",
                "b1676",
                "b1854",
                "b4301",
                "b3386",
                "b2914",
                "b4090",
                "b0723",
                "b0724",
                "b0722",
                "b0721",
                "b0728",
                "b0729",
                "b2464",
                "b0008",
                "b2465",
                "b2935",
                "b3919"
            ],
            "duration": 0.0002970695495605469,
            "message": "137 genes are defined in the model.",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect that more than one gene is defined in the model.\n\n    A metabolic model can still be a useful tool without any\n    genes, however there are certain methods which rely on the presence of\n    genes and, more importantly, the corresponding gene-protein-reaction\n    rules. This test requires that there is at least one gene defined.\n    ",
            "title": "Total Number of Genes",
            "format_type": "count"
        },
        "test_metabolic_coverage": {
            "data": null,
            "duration": 0.00037384033203125,
            "message": "The degree of metabolic coverage is 0.69.",
            "metric": 0.6934306569343066,
            "result": "failed",
            "summary": "\n    Expect a model to have a metabolic coverage >= 1.\n\n    The degree of metabolic coverage indicates the modeling detail of a\n    given reconstruction calculated by dividing the total amount of\n    reactions by the amount of genes. Models with a 'high level of modeling\n    detail have ratios >1, and models with a low level of detail have\n    ratios <1. This difference arises as models with basic or intermediate\n    levels of detail are assumed to include many reactions in which several\n    gene products and their enzymatic transformations are \u2018lumped\u2019.\n    ",
            "title": "Metabolic Coverage",
            "format_type": "percent"
        },
        "test_metabolite_annotation_overview": {
            "data": {
                "bigg.metabolite": [],
                "biocyc": [
                    "fdp_c"
                ],
                "chebi": [
                    "nh4_c",
                    "nh4_e"
                ],
                "hmdb": [
                    "fdp_c",
                    "fru_e",
                    "nh4_c",
                    "nh4_e",
                    "q8_c",
                    "r5p_c"
                ],
                "inchikey": [
                    "13dpg_c",
                    "2pg_c",
                    "3pg_c",
                    "6pgc_c",
                    "6pgl_c",
                    "ac_c",
                    "ac_e",
                    "acald_c",
                    "acald_e",
                    "accoa_c",
                    "acon_C_c",
                    "actp_c",
                    "adp_c",
                    "akg_c",
                    "akg_e",
                    "amp_c",
                    "atp_c",
                    "cit_c",
                    "co2_c",
                    "co2_e",
                    "coa_c",
                    "dhap_c",
                    "e4p_c",
                    "etoh_c",
                    "etoh_e",
                    "f6p_c",
                    "fdp_c",
                    "for_c",
                    "for_e",
                    "fru_e",
                    "fum_c",
                    "fum_e",
                    "g3p_c",
                    "g6p_c",
                    "glc__D_e",
                    "gln__L_c",
                    "gln__L_e",
                    "glu__L_c",
                    "glu__L_e",
                    "glx_c",
                    "h2o_c",
                    "h2o_e",
                    "h_c",
                    "h_e",
                    "icit_c",
                    "lac__D_c",
                    "lac__D_e",
                    "mal__L_c",
                    "mal__L_e",
                    "nad_c",
                    "nadh_c",
                    "nadp_c",
                    "nadph_c",
                    "nh4_c",
                    "nh4_e",
                    "o2_c",
                    "o2_e",
                    "oaa_c",
                    "pep_c",
                    "pi_c",
                    "pi_e",
                    "pyr_c",
                    "pyr_e",
                    "q8_c",
                    "q8h2_c",
                    "r5p_c",
                    "ru5p__D_c",
                    "s7p_c",
                    "succ_c",
                    "succ_e",
                    "succoa_c",
                    "xu5p__D_c"
                ],
                "kegg.compound": [
                    "nh4_c",
                    "nh4_e",
                    "q8h2_c"
                ],
                "metanetx.chemical": [],
                "pubchem.compound": [
                    "13dpg_c",
                    "2pg_c",
                    "3pg_c",
                    "6pgc_c",
                    "6pgl_c",
                    "ac_c",
                    "ac_e",
                    "acald_c",
                    "acald_e",
                    "accoa_c",
                    "acon_C_c",
                    "actp_c",
                    "adp_c",
                    "akg_c",
                    "akg_e",
                    "amp_c",
                    "atp_c",
                    "cit_c",
                    "co2_c",
                    "co2_e",
                    "coa_c",
                    "dhap_c",
                    "e4p_c",
                    "etoh_c",
                    "etoh_e",
                    "f6p_c",
                    "fdp_c",
                    "for_c",
                    "for_e",
                    "fru_e",
                    "fum_c",
                    "fum_e",
                    "g3p_c",
                    "g6p_c",
                    "glc__D_e",
                    "gln__L_c",
                    "gln__L_e",
                    "glu__L_c",
                    "glu__L_e",
                    "glx_c",
                    "h2o_c",
                    "h2o_e",
                    "h_c",
                    "h_e",
                    "icit_c",
                    "lac__D_c",
                    "lac__D_e",
                    "mal__L_c",
                    "mal__L_e",
                    "nad_c",
                    "nadh_c",
                    "nadp_c",
                    "nadph_c",
                    "nh4_c",
                    "nh4_e",
                    "o2_c",
                    "o2_e",
                    "oaa_c",
                    "pep_c",
                    "pi_c",
                    "pi_e",
                    "pyr_c",
                    "pyr_e",
                    "q8_c",
                    "q8h2_c",
                    "r5p_c",
                    "ru5p__D_c",
                    "s7p_c",
                    "succ_c",
                    "succ_e",
                    "succoa_c",
                    "xu5p__D_c"
                ],
                "reactome": [
                    "13dpg_c",
                    "2pg_c",
                    "3pg_c",
                    "6pgc_c",
                    "6pgl_c",
                    "ac_c",
                    "ac_e",
                    "acald_c",
                    "acald_e",
                    "accoa_c",
                    "acon_C_c",
                    "actp_c",
                    "adp_c",
                    "akg_c",
                    "akg_e",
                    "amp_c",
                    "atp_c",
                    "cit_c",
                    "co2_c",
                    "co2_e",
                    "coa_c",
                    "dhap_c",
                    "e4p_c",
                    "etoh_c",
                    "etoh_e",
                    "f6p_c",
                    "fdp_c",
                    "for_c",
                    "for_e",
                    "fru_e",
                    "fum_c",
                    "fum_e",
                    "g3p_c",
                    "g6p_c",
                    "glc__D_e",
                    "gln__L_c",
                    "gln__L_e",
                    "glu__L_c",
                    "glu__L_e",
                    "glx_c",
                    "h2o_c",
                    "h2o_e",
                    "h_c",
                    "h_e",
                    "icit_c",
                    "lac__D_c",
                    "lac__D_e",
                    "mal__L_c",
                    "mal__L_e",
                    "nad_c",
                    "nadh_c",
                    "nadp_c",
                    "nadph_c",
                    "nh4_c",
                    "nh4_e",
                    "o2_c",
                    "o2_e",
                    "oaa_c",
                    "pep_c",
                    "pi_c",
                    "pi_e",
                    "pyr_c",
                    "pyr_e",
                    "q8_c",
                    "q8h2_c",
                    "r5p_c",
                    "ru5p__D_c",
                    "s7p_c",
                    "succ_c",
                    "succ_e",
                    "succoa_c",
                    "xu5p__D_c"
                ],
                "seed.compound": [
                    "glc__D_e"
                ]
            },
            "duration": {
                "bigg.metabolite": 0.00027298927307128906,
                "biocyc": 0.0004680156707763672,
                "chebi": 0.00045800209045410156,
                "hmdb": 0.0014941692352294922,
                "inchikey": 0.0006268024444580078,
                "kegg.compound": 0.0004901885986328125,
                "metanetx.chemical": 0.00023984909057617188,
                "pubchem.compound": 0.002286195755004883,
                "reactome": 0.0005788803100585938,
                "seed.compound": 0.0005388259887695312
            },
            "message": {
                "bigg.metabolite": "The following 0 metabolites (0.00%) lack annotation for\nbigg.metabolite:",
                "biocyc": "The following 1 metabolites (1.39%) lack annotation for biocyc:\nfdp_c",
                "chebi": "The following 2 metabolites (2.78%) lack annotation for chebi:\nnh4_c, nh4_e",
                "hmdb": "The following 6 metabolites (8.33%) lack annotation for hmdb:\nfdp_c, fru_e, nh4_c, nh4_e, q8_c, ...",
                "inchikey": "The following 72 metabolites (100.00%) lack annotation for inchikey:\n13dpg_c, 2pg_c, 3pg_c, 6pgc_c, 6pgl_c, ...",
                "kegg.compound": "The following 3 metabolites (4.17%) lack annotation for kegg.compound:\nnh4_c, nh4_e, q8h2_c",
                "metanetx.chemical": "The following 0 metabolites (0.00%) lack annotation for\nmetanetx.chemical:",
                "pubchem.compound": "The following 72 metabolites (100.00%) lack annotation for\npubchem.compound:         13dpg_c, 2pg_c, 3pg_c, 6pgc_c, 6pgl_c, ...",
                "reactome": "The following 72 metabolites (100.00%) lack annotation for reactome:\n13dpg_c, 2pg_c, 3pg_c, 6pgc_c, 6pgl_c, ...",
                "seed.compound": "The following 1 metabolites (1.39%) lack annotation for seed.compound:\nglc__D_e"
            },
            "metric": {
                "bigg.metabolite": 0.0,
                "biocyc": 0.013888888888888888,
                "chebi": 0.027777777777777776,
                "hmdb": 0.08333333333333333,
                "inchikey": 1.0,
                "kegg.compound": 0.041666666666666664,
                "metanetx.chemical": 0.0,
                "pubchem.compound": 1.0,
                "reactome": 1.0,
                "seed.compound": 0.013888888888888888
            },
            "result": {
                "bigg.metabolite": "passed",
                "biocyc": "failed",
                "chebi": "failed",
                "hmdb": "failed",
                "inchikey": "failed",
                "kegg.compound": "failed",
                "metanetx.chemical": "passed",
                "pubchem.compound": "failed",
                "reactome": "failed",
                "seed.compound": "failed"
            },
            "summary": "\n    Expect all metabolites to have annotations from common databases.\n\n    Specific database cross-references are paramount to mapping information.\n    To provide references to as many databases as possible helps to make the\n    metabolic model more accessible to other researchers. This does not only\n    facilitate the use of a model in a broad array of computational pipelines,\n    it also promotes the metabolic model itself to become an organism-specific\n    knowledge base.\n\n    For this test to pass, each metabolite annotation should contain\n    cross-references to a number of databases (listed in `annotation.py`).\n    For each database this test checks for the presence of its corresponding\n    namespace ID to comply with the MIRIAM guidelines i.e. they have to match\n    those defined on https://identifiers.org/.\n\n    Since each database is quite different and some potentially incomplete, it\n    may not be feasible to achieve 100% coverage for each of them. Generally\n    it should be possible, however, to obtain cross-references to at least\n    one of the databases for all metabolites consistently.\n    ",
            "title": "Missing Metabolite Annotations Per Database",
            "format_type": "percent"
        },
        "test_metabolite_annotation_presence": {
            "data": [],
            "duration": 0.00026988983154296875,
            "message": "A total of 0 metabolites (0.00%) lack any form of annotation:",
            "metric": 0.0,
            "result": "passed",
            "summary": "\n    Expect all metabolites to have a non-empty annotation attribute.\n\n    This test checks if any annotations at all are present in the SBML\n    annotations field for each metabolite, irrespective of the type of\n    annotation i.e. specific database  cross-references, ontology terms,\n    additional information. For this test to pass the model is expected to\n    have metabolites and each of them should have some form of annotation.\n    ",
            "title": "Metabolites without Annotation",
            "format_type": "count"
        },
        "test_metabolite_annotation_wrong_ids": {
            "data": {
                "bigg.metabolite": [],
                "biocyc": [],
                "chebi": [],
                "hmdb": [],
                "inchikey": [],
                "kegg.compound": [
                    "ac_c",
                    "ac_e",
                    "adp_c",
                    "amp_c",
                    "atp_c",
                    "cit_c",
                    "co2_c",
                    "co2_e",
                    "etoh_c",
                    "etoh_e",
                    "fru_e",
                    "fum_c",
                    "fum_e",
                    "glc__D_e",
                    "gln__L_c",
                    "gln__L_e",
                    "glu__L_c",
                    "glu__L_e",
                    "h2o_c",
                    "h2o_e",
                    "nad_c",
                    "o2_c",
                    "o2_e",
                    "pi_c",
                    "pi_e"
                ],
                "metanetx.chemical": [],
                "pubchem.compound": [],
                "reactome": [],
                "seed.compound": []
            },
            "duration": {
                "bigg.metabolite": 0.00032401084899902344,
                "biocyc": 0.00040912628173828125,
                "chebi": 0.0007331371307373047,
                "hmdb": 0.0003669261932373047,
                "inchikey": 0.00032401084899902344,
                "kegg.compound": 0.00080108642578125,
                "metanetx.chemical": 0.00036978721618652344,
                "pubchem.compound": 0.0017762184143066406,
                "reactome": 0.00033092498779296875,
                "seed.compound": 0.00037288665771484375
            },
            "message": {
                "bigg.metabolite": "The provided metabolite annotations for the bigg.metabolite database\ndo not match         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "biocyc": "The provided metabolite annotations for the biocyc database do not\nmatch         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "chebi": "The provided metabolite annotations for the chebi database do not\nmatch         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "hmdb": "The provided metabolite annotations for the hmdb database do not match\nthe regular expression patterns defined on identifiers.org. A total of\n0 metabolite annotations (0.00%) needs to be fixed:",
                "inchikey": "The provided metabolite annotations for the inchikey database do not\nmatch         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "kegg.compound": "The provided metabolite annotations for the kegg.compound database do\nnot match         the regular expression patterns defined on\nidentifiers.org. A total of         25 metabolite annotations (34.72%)\nneeds to be fixed: ac_c, ac_e, adp_c, amp_c, atp_c, ...",
                "metanetx.chemical": "The provided metabolite annotations for the metanetx.chemical database\ndo not match         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "pubchem.compound": "The provided metabolite annotations for the pubchem.compound database\ndo not match         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "reactome": "The provided metabolite annotations for the reactome database do not\nmatch         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:",
                "seed.compound": "The provided metabolite annotations for the seed.compound database do\nnot match         the regular expression patterns defined on\nidentifiers.org. A total of         0 metabolite annotations (0.00%)\nneeds to be fixed:"
            },
            "metric": {
                "bigg.metabolite": 0.0,
                "biocyc": 0.0,
                "chebi": 0.0,
                "hmdb": 0.0,
                "inchikey": 0.0,
                "kegg.compound": 0.3472222222222222,
                "metanetx.chemical": 0.0,
                "pubchem.compound": 0.0,
                "reactome": 0.0,
                "seed.compound": 0.0
            },
            "result": {
                "bigg.metabolite": "passed",
                "biocyc": "passed",
                "chebi": "passed",
                "hmdb": "passed",
                "inchikey": "passed",
                "kegg.compound": "failed",
                "metanetx.chemical": "passed",
                "pubchem.compound": "passed",
                "reactome": "passed",
                "seed.compound": "passed"
            },
            "summary": "\n    Expect all annotations of metabolites to be in the correct format.\n\n    To identify databases and the identifiers belonging to them, computational\n    tools rely on the presence of specific patterns. Only when these patterns\n    can be identified consistently is an ID truly machine-readable. This test\n    checks if the database cross-references in metabolite annotations conform\n    to patterns defined according to the MIRIAM guidelines, i.e. matching\n    those that are defined at https://identifiers.org/.\n\n    The required formats, i.e., regex patterns are further outlined in\n    `annotation.py`. This test does not carry out a web query for the composed\n    URI, it merely controls that the regex patterns match the identifiers.\n    ",
            "title": "Wrong Metabolite Annotations Per Database",
            "format_type": "percent"
        },
        "test_metabolite_id_namespace_consistency": {
            "data": [
                "13dpg_c",
                "2pg_c",
                "3pg_c",
                "6pgc_c",
                "6pgl_c",
                "ac_c",
                "ac_e",
                "acald_c",
                "acald_e",
                "accoa_c",
                "acon_C_c",
                "actp_c",
                "adp_c",
                "akg_c",
                "akg_e",
                "amp_c",
                "atp_c",
                "cit_c",
                "co2_c",
                "co2_e",
                "coa_c",
                "dhap_c",
                "e4p_c",
                "etoh_c",
                "etoh_e",
                "f6p_c",
                "fdp_c",
                "for_c",
                "for_e",
                "fru_e",
                "fum_c",
                "fum_e",
                "g3p_c",
                "g6p_c",
                "glc__D_e",
                "gln__L_c",
                "gln__L_e",
                "glu__L_c",
                "glu__L_e",
                "glx_c",
                "h2o_c",
                "h2o_e",
                "h_c",
                "h_e",
                "icit_c",
                "lac__D_c",
                "lac__D_e",
                "mal__L_c",
                "mal__L_e",
                "nad_c",
                "nadh_c",
                "nadp_c",
                "nadph_c",
                "nh4_c",
                "nh4_e",
                "o2_c",
                "o2_e",
                "oaa_c",
                "pep_c",
                "pi_c",
                "pi_e",
                "pyr_c",
                "pyr_e",
                "q8_c",
                "q8h2_c",
                "r5p_c",
                "ru5p__D_c",
                "s7p_c",
                "succ_c",
                "succ_e",
                "succoa_c",
                "xu5p__D_c"
            ],
            "duration": 0.018959999084472656,
            "message": "72 metabolite identifiers (100.00%) do not match the largest found\nnamespace (bigg.metabolite): 13dpg_c, 2pg_c, 3pg_c, 6pgc_c, 6pgl_c,\n...",
            "metric": 1.0,
            "result": "failed",
            "summary": "\n    Expect metabolite identifiers to be from the same namespace.\n\n    In well-annotated models it is no problem if the pool of main identifiers\n    for metabolites consists of identifiers from several databases. However,\n    in models that lack appropriate annotations, it may hamper the ability of\n    other researchers to use it. Running the model through a computational\n    pipeline may be difficult without first consolidating the namespace.\n\n    Hence, this test checks if the main metabolite identifiers can be\n    attributed to one single namespace based on the regex patterns defined at\n    https://identifiers.org/\n    ",
            "title": "Uniform Metabolite Identifier Namespace",
            "format_type": "count"
        },
        "test_metabolites_charge_presence": {
            "data": [
                "13dpg_c",
                "2pg_c",
                "3pg_c",
                "6pgc_c",
                "6pgl_c",
                "ac_c",
                "ac_e",
                "acald_c",
                "acald_e",
                "accoa_c",
                "acon_C_c",
                "actp_c",
                "adp_c",
                "akg_c",
                "akg_e",
                "amp_c",
                "atp_c",
                "cit_c",
                "co2_c",
                "co2_e",
                "coa_c",
                "dhap_c",
                "e4p_c",
                "etoh_c",
                "etoh_e",
                "f6p_c",
                "fdp_c",
                "for_c",
                "for_e",
                "fru_e",
                "fum_c",
                "fum_e",
                "g3p_c",
                "g6p_c",
                "glc__D_e",
                "gln__L_c",
                "gln__L_e",
                "glu__L_c",
                "glu__L_e",
                "glx_c",
                "h2o_c",
                "h2o_e",
                "h_c",
                "h_e",
                "icit_c",
                "lac__D_c",
                "lac__D_e",
                "mal__L_c",
                "mal__L_e",
                "nad_c",
                "nadh_c",
                "nadp_c",
                "nadph_c",
                "nh4_c",
                "nh4_e",
                "o2_c",
                "o2_e",
                "oaa_c",
                "pep_c",
                "pi_c",
                "pi_e",
                "pyr_c",
                "pyr_e",
                "q8_c",
                "q8h2_c",
                "r5p_c",
                "ru5p__D_c",
                "s7p_c",
                "succ_c",
                "succ_e",
                "succoa_c",
                "xu5p__D_c"
            ],
            "duration": 0.0008821487426757812,
            "message": "There are a total of 72         metabolites (100.00%) without a\ncharge: 13dpg_c, 2pg_c, 3pg_c, 6pgc_c, 6pgl_c, ...",
            "metric": 1.0,
            "result": "failed",
            "summary": "\n    Expect all metabolites to have charge information.\n\n    To be able to ensure that reactions are charge-balanced, all model\n    metabolites ought to be provided with a charge.\n    ",
            "title": "Metabolites without Charge",
            "format_type": "count"
        },
        "test_metabolites_formula_presence": {
            "data": [],
            "duration": 0.00033402442932128906,
            "message": "There are a total of 0         metabolites (0.00%) without a formula:",
            "metric": 0.0,
            "result": "passed",
            "summary": "\n    Expect all metabolites to have a formula.\n\n    To be able to ensure that reactions are mass-balanced, all model\n    metabolites ought to be provided with a chemical formula.\n    ",
            "title": "Metabolites without Formula",
            "format_type": "count"
        },
        "test_metabolites_presence": {
            "data": [
                "13dpg_c",
                "2pg_c",
                "3pg_c",
                "6pgc_c",
                "6pgl_c",
                "ac_c",
                "ac_e",
                "acald_c",
                "acald_e",
                "accoa_c",
                "acon_C_c",
                "actp_c",
                "adp_c",
                "akg_c",
                "akg_e",
                "amp_c",
                "atp_c",
                "cit_c",
                "co2_c",
                "co2_e",
                "coa_c",
                "dhap_c",
                "e4p_c",
                "etoh_c",
                "etoh_e",
                "f6p_c",
                "fdp_c",
                "for_c",
                "for_e",
                "fru_e",
                "fum_c",
                "fum_e",
                "g3p_c",
                "g6p_c",
                "glc__D_e",
                "gln__L_c",
                "gln__L_e",
                "glu__L_c",
                "glu__L_e",
                "glx_c",
                "h2o_c",
                "h2o_e",
                "h_c",
                "h_e",
                "icit_c",
                "lac__D_c",
                "lac__D_e",
                "mal__L_c",
                "mal__L_e",
                "nad_c",
                "nadh_c",
                "nadp_c",
                "nadph_c",
                "nh4_c",
                "nh4_e",
                "o2_c",
                "o2_e",
                "oaa_c",
                "pep_c",
                "pi_c",
                "pi_e",
                "pyr_c",
                "pyr_e",
                "q8_c",
                "q8h2_c",
                "r5p_c",
                "ru5p__D_c",
                "s7p_c",
                "succ_c",
                "succ_e",
                "succoa_c",
                "xu5p__D_c"
            ],
            "duration": 0.0007162094116210938,
            "message": "72 metabolites are defined in the model.",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect that more than one metabolite is defined in the model.\n\n    To be useful a metabolic model should consist at least of a few\n    metabolites that are converted by reactions.\n    This test simply checks if there are more than one metabolites defined.\n    ",
            "title": "Total Number of Metabolites",
            "format_type": "count"
        },
        "test_model_id_presence": {
            "data": "e_coli_core",
            "duration": 0.0002200603485107422,
            "message": null,
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect that the model has an identifier.\n\n    The MIRIAM guidelines require a model to be named. While it is not\n    required, the ID will be displayed on the memote reports, which helps to\n    distinguish the output clearly.\n    ",
            "title": "Model Identifier",
            "format_type": "raw"
        },
        "test_ngam_presence": {
            "data": [
                "ATPM"
            ],
            "duration": 0.0009140968322753906,
            "message": "A total of 1 NGAM reactions could be identified:         ATPM",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect a single non growth-associated maintenance reaction.\n\n    The Non-Growth Associated Maintenance reaction (NGAM) is an\n    ATP-hydrolysis reaction added to metabolic models to represent energy\n    expenses that the cell invests in continuous processes independent of\n    the growth rate.\n    ",
            "title": "Non-Growth Associated Maintenance Reaction",
            "format_type": "count"
        },
        "test_protein_complex_presence": {
            "data": [
                [
                    "b3951",
                    "b3952"
                ],
                [
                    "b0902",
                    "b0903",
                    "b2579"
                ],
                [
                    "b3212",
                    "b3213"
                ],
                [
                    "b1817",
                    "b1818",
                    "b1819",
                    "b2415",
                    "b2416"
                ],
                [
                    "b0728",
                    "b0729"
                ],
                [
                    "b1101",
                    "b2415",
                    "b2416",
                    "b2417"
                ],
                [
                    "b3731",
                    "b3732",
                    "b3733",
                    "b3734",
                    "b3735",
                    "b3736",
                    "b3737",
                    "b3738"
                ],
                [
                    "b1602",
                    "b1603"
                ],
                [
                    "b3731",
                    "b3732",
                    "b3733",
                    "b3734",
                    "b3735",
                    "b3736",
                    "b3737",
                    "b3738",
                    "b3739"
                ],
                [
                    "b2276",
                    "b2277",
                    "b2278",
                    "b2279",
                    "b2280",
                    "b2281",
                    "b2282",
                    "b2283",
                    "b2284",
                    "b2285",
                    "b2286",
                    "b2287",
                    "b2288"
                ],
                [
                    "b0902",
                    "b3114"
                ],
                [
                    "b0116",
                    "b0726",
                    "b0727"
                ],
                [
                    "b0902",
                    "b0903"
                ],
                [
                    "b0721",
                    "b0722",
                    "b0723",
                    "b0724"
                ],
                [
                    "b1621",
                    "b2415",
                    "b2416",
                    "b2417"
                ],
                [
                    "b0114",
                    "b0115",
                    "b0116"
                ],
                [
                    "b0809",
                    "b0810",
                    "b0811"
                ],
                [
                    "b0978",
                    "b0979"
                ],
                [
                    "b4151",
                    "b4152",
                    "b4153",
                    "b4154"
                ],
                [
                    "b0733",
                    "b0734"
                ]
            ],
            "duration": 0.12781977653503418,
            "message": "A total of 20 protein complexes are defined through GPR rules in\nthe model.",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect that more than one enzyme complex is present in the model.\n\n    Based on the gene-protein-reaction (GPR) rules, it is possible to infer\n    whether a reaction is catalyzed by a single gene product, isozymes or by a\n    heteromeric protein complex. This test checks that at least one\n    such protein complex is defined in the GPR of the model. For S. cerevisiae\n    it could be shown that \"essential proteins tend to [cluster] together in\n    essential complexes\" (https://doi.org/10.1074%2Fmcp.M800490-MCP200).\n\n    This might also be a relevant metric for other organisms.\n    ",
            "title": "Number of Enzyme Complexes",
            "format_type": "count"
        },
        "test_reaction_annotation_overview": {
            "data": {
                "bigg.reaction": [],
                "biocyc": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ],
                "brenda": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ],
                "ec-code": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ],
                "kegg.reaction": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ],
                "metanetx.reaction": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ],
                "rhea": [
                    "ACALD",
                    "ACALDt",
                    "ACKr",
                    "ACONTa",
                    "ACONTb",
                    "ACt2r",
                    "ADK1",
                    "AKGDH",
                    "AKGt2r",
                    "ALCD2x",
                    "ATPM",
                    "ATPS4r",
                    "BIOMASS_Ecoli_core_w_GAM",
                    "CO2t",
                    "CS",
                    "CYTBD",
                    "D_LACt2",
                    "ENO",
                    "ETOHt2r",
                    "EX_ac_e",
                    "EX_acald_e",
                    "EX_akg_e",
                    "EX_co2_e",
                    "EX_etoh_e",
                    "EX_for_e",
                    "EX_fru_e",
                    "EX_fum_e",
                    "EX_glc__D_e",
                    "EX_gln__L_e",
                    "EX_glu__L_e",
                    "EX_h_e",
                    "EX_h2o_e",
                    "EX_lac__D_e",
                    "EX_mal__L_e",
                    "EX_nh4_e",
                    "EX_o2_e",
                    "EX_pi_e",
                    "EX_pyr_e",
                    "EX_succ_e",
                    "FBA",
                    "FBP",
                    "FORt2",
                    "FORti",
                    "FRD7",
                    "FRUpts2",
                    "FUM",
                    "FUMt2_2",
                    "G6PDH2r",
                    "GAPD",
                    "GLCpts",
                    "GLNS",
                    "GLNabc",
                    "GLUDy",
                    "GLUN",
                    "GLUSy",
                    "GLUt2r",
                    "GND",
                    "H2Ot",
                    "ICDHyr",
                    "ICL",
                    "LDH_D",
                    "MALS",
                    "MALt2_2",
                    "MDH",
                    "ME1",
                    "ME2",
                    "NADH16",
                    "NADTRHD",
                    "NH4t",
                    "O2t",
                    "PDH",
                    "PFK",
                    "PFL",
                    "PGI",
                    "PGK",
                    "PGL",
                    "PGM",
                    "PIt2r",
                    "PPC",
                    "PPCK",
                    "PPS",
                    "PTAr",
                    "PYK",
                    "PYRt2",
                    "RPE",
                    "RPI",
                    "SUCCt2_2",
                    "SUCCt3",
                    "SUCDi",
                    "SUCOAS",
                    "TALA",
                    "THD2",
                    "TKT1",
                    "TKT2",
                    "TPI"
                ]
            },
            "duration": {
                "bigg.reaction": 0.0003018379211425781,
                "biocyc": 0.0011289119720458984,
                "brenda": 0.0005519390106201172,
                "ec-code": 0.000553131103515625,
                "kegg.reaction": 0.0013740062713623047,
                "metanetx.reaction": 0.0006659030914306641,
                "rhea": 0.0005590915679931641
            },
            "message": {
                "bigg.reaction": "The following 0 reactions (0.00%) lack annotation for bigg.reaction:",
                "biocyc": "The following 95 reactions (100.00%) lack annotation for biocyc:\nACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
                "brenda": "The following 95 reactions (100.00%) lack annotation for brenda:\nACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
                "ec-code": "The following 95 reactions (100.00%) lack annotation for ec-code:\nACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
                "kegg.reaction": "The following 95 reactions (100.00%) lack annotation for\nkegg.reaction:         ACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
                "metanetx.reaction": "The following 95 reactions (100.00%) lack annotation for\nmetanetx.reaction:         ACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
                "rhea": "The following 95 reactions (100.00%) lack annotation for rhea:\nACALD, ACALDt, ACKr, ACONTa, ACONTb, ..."
            },
            "metric": {
                "bigg.reaction": 0.0,
                "biocyc": 1.0,
                "brenda": 1.0,
                "ec-code": 1.0,
                "kegg.reaction": 1.0,
                "metanetx.reaction": 1.0,
                "rhea": 1.0
            },
            "result": {
                "bigg.reaction": "passed",
                "biocyc": "failed",
                "brenda": "failed",
                "ec-code": "failed",
                "kegg.reaction": "failed",
                "metanetx.reaction": "failed",
                "rhea": "failed"
            },
            "summary": "\n    Expect all reactions to have annotations from common databases.\n\n    Specific database cross-references are paramount to mapping information.\n    To provide references to as many databases as possible helps to make the\n    metabolic model more accessible to other researchers. This does not only\n    facilitate the use of a model in a broad array of computational pipelines,\n    it also promotes the metabolic model itself to become an organism-specific\n    knowledge base.\n\n    For this test to pass, each reaction annotation should contain\n    cross-references to a number of databases (listed in `annotation.py`).\n    For each database this test checks for the presence of its corresponding\n    namespace ID to comply with the MIRIAM guidelines i.e. they have to match\n    those defined on https://identifiers.org/.\n\n    Since each database is quite different and some potentially incomplete, it\n    may not be feasible to achieve 100% coverage for each of them. Generally\n    it should be possible, however, to obtain cross-references to at least\n    one of the databases for all reactions consistently.\n    ",
            "title": "Missing Reaction Annotations Per Database",
            "format_type": "percent"
        },
        "test_reaction_annotation_presence": {
            "data": [],
            "duration": 0.0002589225769042969,
            "message": "A total of 0 reactions (0.00%) lack any form of annotation:",
            "metric": 0.0,
            "result": "passed",
            "summary": "\n    Expect all reactions to have a non-empty annotation attribute.\n\n    This test checks if any annotations at all are present in the SBML\n    annotations field for each reaction, irrespective of the type of\n    annotation i.e. specific database  cross-references, ontology terms,\n    additional information. For this test to pass the model is expected to\n    have reactions and each of them should have some form of annotation.\n    ",
            "title": "Reactions without Annotation",
            "format_type": "count"
        },
        "test_reaction_annotation_wrong_ids": {
            "data": {
                "bigg.reaction": [],
                "biocyc": [],
                "brenda": [],
                "ec-code": [],
                "kegg.reaction": [],
                "metanetx.reaction": [],
                "rhea": []
            },
            "duration": {
                "bigg.reaction": 0.0007801055908203125,
                "biocyc": 0.0005979537963867188,
                "brenda": 0.00036787986755371094,
                "ec-code": 0.0006229877471923828,
                "kegg.reaction": 0.0003399848937988281,
                "metanetx.reaction": 0.0002970695495605469,
                "rhea": 0.0002951622009277344
            },
            "message": {
                "bigg.reaction": "The provided reaction annotations for the bigg.reaction database do\nnot match         the regular expression patterns defined on\nidentifiers.org. A total of         0 reaction annotations (0.00%)\nneeds to be fixed:",
                "biocyc": "The provided reaction annotations for the biocyc database do not match\nthe regular expression patterns defined on identifiers.org. A total of\n0 reaction annotations (0.00%) needs to be fixed:",
                "brenda": "The provided reaction annotations for the brenda database do not match\nthe regular expression patterns defined on identifiers.org. A total of\n0 reaction annotations (0.00%) needs to be fixed:",
                "ec-code": "The provided reaction annotations for the ec-code database do not\nmatch         the regular expression patterns defined on\nidentifiers.org. A total of         0 reaction annotations (0.00%)\nneeds to be fixed:",
                "kegg.reaction": "The provided reaction annotations for the kegg.reaction database do\nnot match         the regular expression patterns defined on\nidentifiers.org. A total of         0 reaction annotations (0.00%)\nneeds to be fixed:",
                "metanetx.reaction": "The provided reaction annotations for the metanetx.reaction database\ndo not match         the regular expression patterns defined on\nidentifiers.org. A total of         0 reaction annotations (0.00%)\nneeds to be fixed:",
                "rhea": "The provided reaction annotations for the rhea database do not match\nthe regular expression patterns defined on identifiers.org. A total of\n0 reaction annotations (0.00%) needs to be fixed:"
            },
            "metric": {
                "bigg.reaction": 0.0,
                "biocyc": 0.0,
                "brenda": 0.0,
                "ec-code": 0.0,
                "kegg.reaction": 0.0,
                "metanetx.reaction": 0.0,
                "rhea": 0.0
            },
            "result": {
                "bigg.reaction": "passed",
                "biocyc": "passed",
                "brenda": "passed",
                "ec-code": "passed",
                "kegg.reaction": "passed",
                "metanetx.reaction": "passed",
                "rhea": "passed"
            },
            "summary": "\n    Expect all annotations of reactions to be in the correct format.\n\n    To identify databases and the identifiers belonging to them, computational\n    tools rely on the presence of specific patterns. Only when these patterns\n    can be identified consistently is an ID truly machine-readable. This test\n    checks if the database cross-references in reaction annotations conform\n    to patterns defined according to the MIRIAM guidelines, i.e. matching\n    those that are defined at https://identifiers.org/.\n\n    The required formats, i.e., regex patterns are further outlined in\n    `annotation.py`. This test does not carry out a web query for the composed\n    URI, it merely controls that the regex patterns match the identifiers.\n    ",
            "title": "Wrong Reaction Annotations Per Database",
            "format_type": "percent"
        },
        "test_reaction_charge_balance": {
            "data": [
                "GLNS",
                "SUCOAS",
                "ICL",
                "FRD7",
                "AKGDH",
                "GLUt2r",
                "GLNabc",
                "SUCCt2_2",
                "CS",
                "ATPS4r",
                "GLUDy",
                "LDH_D",
                "GLUN",
                "FBA",
                "PGM",
                "ACKr",
                "GND",
                "FUM",
                "PPC",
                "PFK",
                "ACONTa",
                "PIt2r",
                "GLUSy",
                "SUCCt3",
                "PDH",
                "CYTBD",
                "MALt2_2",
                "ENO",
                "TKT1",
                "THD2",
                "D_LACt2",
                "TALA",
                "ADK1",
                "G6PDH2r",
                "PPCK",
                "GAPD",
                "ETOHt2r",
                "TPI",
                "ACONTb",
                "RPI",
                "H2Ot",
                "MDH",
                "MALS",
                "PGL",
                "RPE",
                "PYK",
                "ME1",
                "ACt2r",
                "GLCpts",
                "ATPM",
                "FRUpts2",
                "PFL",
                "TKT2",
                "NADH16",
                "PGI",
                "PPS",
                "FUMt2_2",
                "ICDHyr",
                "ACALD",
                "PGK",
                "ALCD2x",
                "PYRt2",
                "FBP",
                "SUCDi",
                "NADTRHD",
                "ACALDt",
                "FORt2",
                "PTAr",
                "O2t",
                "AKGt2r",
                "NH4t",
                "FORti",
                "ME2",
                "CO2t"
            ],
            "duration": 0.0009801387786865234,
            "message": "A total of 74 (0.00%) reactions are charge imbalanced with at least\none of the metabolites not having a charge or the overall charge not\nequal to 0: GLNS, SUCOAS, ICL, FRD7, AKGDH, ...",
            "metric": 0,
            "result": "failed",
            "summary": "\n    Expect all reactions to be charge balanced.\n\n    In steady state, for each metabolite the sum of influx equals the sum\n    of outflux. Hence the net charges of both sides of any model reaction have\n    to be equal.\n    ",
            "title": "Number of Charge-Imbalanced Reactions",
            "format_type": "count"
        },
        "test_reaction_id_namespace_consistency": {
            "data": [
                "ACALD",
                "ACALDt",
                "ACKr",
                "ACONTa",
                "ACONTb",
                "ACt2r",
                "ADK1",
                "AKGDH",
                "AKGt2r",
                "ALCD2x",
                "ATPM",
                "ATPS4r",
                "BIOMASS_Ecoli_core_w_GAM",
                "CO2t",
                "CS",
                "CYTBD",
                "D_LACt2",
                "ENO",
                "ETOHt2r",
                "EX_ac_e",
                "EX_acald_e",
                "EX_akg_e",
                "EX_co2_e",
                "EX_etoh_e",
                "EX_for_e",
                "EX_fru_e",
                "EX_fum_e",
                "EX_glc__D_e",
                "EX_gln__L_e",
                "EX_glu__L_e",
                "EX_h_e",
                "EX_h2o_e",
                "EX_lac__D_e",
                "EX_mal__L_e",
                "EX_nh4_e",
                "EX_o2_e",
                "EX_pi_e",
                "EX_pyr_e",
                "EX_succ_e",
                "FBA",
                "FBP",
                "FORt2",
                "FORti",
                "FRD7",
                "FRUpts2",
                "FUM",
                "FUMt2_2",
                "G6PDH2r",
                "GAPD",
                "GLCpts",
                "GLNS",
                "GLNabc",
                "GLUDy",
                "GLUN",
                "GLUSy",
                "GLUt2r",
                "GND",
                "H2Ot",
                "ICDHyr",
                "ICL",
                "LDH_D",
                "MALS",
                "MALt2_2",
                "MDH",
                "ME1",
                "ME2",
                "NADH16",
                "NADTRHD",
                "NH4t",
                "O2t",
                "PDH",
                "PFK",
                "PFL",
                "PGI",
                "PGK",
                "PGL",
                "PGM",
                "PIt2r",
                "PPC",
                "PPCK",
                "PPS",
                "PTAr",
                "PYK",
                "PYRt2",
                "RPE",
                "RPI",
                "SUCCt2_2",
                "SUCCt3",
                "SUCDi",
                "SUCOAS",
                "TALA",
                "THD2",
                "TKT1",
                "TKT2",
                "TPI"
            ],
            "duration": 0.011594057083129883,
            "message": "95 reaction identifiers (100.00%) do not match the largest found\nnamespace (bigg.reaction): ACALD, ACALDt, ACKr, ACONTa, ACONTb, ...",
            "metric": 1.0,
            "result": "failed",
            "summary": "\n    Expect reaction identifiers to be from the same namespace.\n\n    In well-annotated models it is no problem if the pool of main identifiers\n    for reactions consists of identifiers from several databases. However,\n    in models that lack appropriate annotations, it may hamper the ability of\n    other researchers to use it. Running the model through a computational\n    pipeline may be difficult without first consolidating the namespace.\n\n    Hence, this test checks if the main reaction identifiers can be\n    attributed to one single namespace based on the regex patterns defined at\n    https://identifiers.org/\n    ",
            "title": "Uniform Metabolite Identifier Namespace",
            "format_type": "count"
        },
        "test_reaction_mass_balance": {
            "data": [],
            "duration": 0.0035829544067382812,
            "message": "A total of 0 (0.00%) reactions are mass imbalanced with at least\none of the metabolites not having a formula or the overall mass not\nequal to 0:",
            "metric": 0,
            "result": "passed",
            "summary": "\n    Expect all reactions to be mass balanced.\n\n    In steady state, for each metabolite the sum of influx equals the sum\n    of outflux. Hence the net masses of both sides of any model reaction have\n    to be equal.\n    ",
            "title": "Number of Mass-Unbalanced Reactions",
            "format_type": "count"
        },
        "test_reactions_presence": {
            "data": [
                "ACALD",
                "ACALDt",
                "ACKr",
                "ACONTa",
                "ACONTb",
                "ACt2r",
                "ADK1",
                "AKGDH",
                "AKGt2r",
                "ALCD2x",
                "ATPM",
                "ATPS4r",
                "BIOMASS_Ecoli_core_w_GAM",
                "CO2t",
                "CS",
                "CYTBD",
                "D_LACt2",
                "ENO",
                "ETOHt2r",
                "EX_ac_e",
                "EX_acald_e",
                "EX_akg_e",
                "EX_co2_e",
                "EX_etoh_e",
                "EX_for_e",
                "EX_fru_e",
                "EX_fum_e",
                "EX_glc__D_e",
                "EX_gln__L_e",
                "EX_glu__L_e",
                "EX_h_e",
                "EX_h2o_e",
                "EX_lac__D_e",
                "EX_mal__L_e",
                "EX_nh4_e",
                "EX_o2_e",
                "EX_pi_e",
                "EX_pyr_e",
                "EX_succ_e",
                "FBA",
                "FBP",
                "FORt2",
                "FORti",
                "FRD7",
                "FRUpts2",
                "FUM",
                "FUMt2_2",
                "G6PDH2r",
                "GAPD",
                "GLCpts",
                "GLNS",
                "GLNabc",
                "GLUDy",
                "GLUN",
                "GLUSy",
                "GLUt2r",
                "GND",
                "H2Ot",
                "ICDHyr",
                "ICL",
                "LDH_D",
                "MALS",
                "MALt2_2",
                "MDH",
                "ME1",
                "ME2",
                "NADH16",
                "NADTRHD",
                "NH4t",
                "O2t",
                "PDH",
                "PFK",
                "PFL",
                "PGI",
                "PGK",
                "PGL",
                "PGM",
                "PIt2r",
                "PPC",
                "PPCK",
                "PPS",
                "PTAr",
                "PYK",
                "PYRt2",
                "RPE",
                "RPI",
                "SUCCt2_2",
                "SUCCt3",
                "SUCDi",
                "SUCOAS",
                "TALA",
                "THD2",
                "TKT1",
                "TKT2",
                "TPI"
            ],
            "duration": 0.00029397010803222656,
            "message": "95 reactions are defined in the model.",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect that more than one reaction is defined in the model.\n\n    To be useful a metabolic model should consist at least of a few reactions.\n    This test simply checks if there are more than one.\n    ",
            "title": "Total Number of Reactions",
            "format_type": "count"
        },
        "test_stoichiometric_consistency": {
            "data": [],
            "duration": 0.09202194213867188,
            "message": "This model contains 0 (0.00%) unconserved         metabolites:",
            "metric": 0,
            "result": "passed",
            "summary": "\n    Expect that the stoichiometry is consistent.\n\n    Stoichiometric inconsistency violates universal constraints:\n    1. Molecular masses are always positive, and\n    2. On each side of a reaction the mass is conserved.\n    A single incorrectly defined reaction can lead to stoichiometric\n    inconsistency in the model, and consequently to unconserved metabolites.\n    Similar to insufficient constraints, this may give rise to cycles which\n    either produce mass from nothing or consume mass from the model.\n\n    This test uses an implementation of the algorithm presented by\n    Gevorgyan, A., M. G Poolman, and D. A Fell.\n    \"Detection of Stoichiometric Inconsistencies in Biomolecular Models.\"\n    Bioinformatics 24, no. 19 (2008): 2245.\n    doi: 10.1093/bioinformatics/btn425\n    ",
            "title": "Stoichiometric Consistency",
            "format_type": "count"
        },
        "test_transport_reaction_gpr_presence": {
            "data": [
                "ACt2r",
                "ETOHt2r",
                "PYRt2",
                "SUCCt3"
            ],
            "duration": 0.03811001777648926,
            "message": "There are a total of 4 transport reactions (16.00% of all\ntransport reactions) without GPR:         ACt2r, ETOHt2r, PYRt2,\nSUCCt3",
            "metric": 0.16,
            "result": "failed",
            "summary": "\n    Expect a small fraction of transport reactions not to have a GPR rule.\n\n    As it is hard to identify the exact transport processes within a cell,\n    transport reactions are often added purely for modeling purposes.\n    Highlighting where assumptions have been made vs where\n    there is proof may help direct the efforts to improve transport and\n    transport energetics of the tested metabolic model.\n    However, transport reactions without GPR may also be valid:\n    Diffusion, or known reactions with yet undiscovered genes likely lack GPR.\n    ",
            "title": "Fraction of Transport Reactions without GPR",
            "format_type": "percent"
        },
        "test_transport_reaction_presence": {
            "data": [
                "ACALDt",
                "ACt2r",
                "AKGt2r",
                "ATPS4r",
                "CO2t",
                "CYTBD",
                "D_LACt2",
                "ETOHt2r",
                "FORt2",
                "FORti",
                "FRUpts2",
                "FUMt2_2",
                "GLCpts",
                "GLNabc",
                "GLUt2r",
                "H2Ot",
                "MALt2_2",
                "NADH16",
                "NH4t",
                "O2t",
                "PIt2r",
                "PYRt2",
                "SUCCt2_2",
                "SUCCt3",
                "THD2"
            ],
            "duration": 0.014605998992919922,
            "message": "A total of 25 (100.00%) transport reactions are defined in the\nmodel, this excludes purely metabolic reactions, exchanges, or\npseudo-reactions: ACALDt, ACt2r, AKGt2r, ATPS4r, CO2t, ...",
            "metric": 1.0,
            "result": "passed",
            "summary": "\n    Expect more than one transport reaction to be defined in the model.\n\n    Cellular metabolism in any organism usually involves the transport of\n    metabolites across a lipid bi-layer. Hence, this test checks that there is\n    at least one reaction, which transports metabolites from one compartment\n    to another.\n\n    A transport reaction is defined as follows:\n    1. It contains metabolites from at least two compartments and\n    2. at least one metabolite undergoes no chemical conversion, i.e.,\n    the formula stays the same on both sides of the equation.\n\n    This test will not be able to identify transport via the PTS System.\n    ",
            "title": "Total Number of Transport Reactions",
            "format_type": "count"
        }
    },
    "weights": {
        "test_find_disconnected": null,
        "test_metabolite_annotation_overview": null,
        "test_metabolite_annotation_presence": null,
        "test_metabolite_annotation_wrong_ids": null,
        "test_metabolite_id_namespace_consistency": null,
        "test_reaction_annotation_overview": null,
        "test_reaction_annotation_presence": null,
        "test_reaction_annotation_wrong_ids": null,
        "test_reaction_charge_balance": null,
        "test_reaction_id_namespace_consistency": null,
        "test_reaction_mass_balance": null,
        "test_stoichiometric_consistency": 3.0
    },
  "score": {
    "sections":
        [
            {"section":"annotation", "score": 0.997},
            {"section":"consistency",  "score":0.64},
            {"section":"sbo", "score":0.09}
        ],
    "total_score": 0.3923105636431504
  }
}